package bg.example.recepeWebsite.scheduling;

import bg.example.recepeWebsite.model.entity.enums.CategoryNameEnum;
import bg.example.recepeWebsite.service.EmailService;
import bg.example.recepeWebsite.service.RecipeService;
import org.springframework.stereotype.Service;

import java.time.Instant;
import java.time.LocalDate;
import java.time.ZoneOffset;

@Service
public class ReportService {

    private static final String REPORT_TITLE = "This is autogenerated message from your application.";

    private static final org.slf4j.Logger log = org.slf4j.LoggerFactory.getLogger(ReportService.class);

    private final RecipeService recipeService;

    private final EmailService emailService;

    public ReportService(RecipeService recipeService, EmailService emailService) {
        this.recipeService = recipeService;
        this.emailService = emailService;
    }

    public void generateDailyReport(){
        LocalDate today = LocalDate.now();
        Instant todayMidnight = today.atStartOfDay(ZoneOffset.UTC).toInstant();

        log.info("Start generating report");

        String result = String.format("""
                Report on date: %s
                    Recipes vegan: %d
                    Recipes meat: %d
                    Recipes vegetarian: %d
                    Recipes all: %d
                """, todayMidnight,
                recipeService.findAllByCategory(CategoryNameEnum.VEGAN),
                recipeService.findAllByCategory(CategoryNameEnum.WITH_MEAT),
                recipeService.findAllByCategory(CategoryNameEnum.VEGETARIAN),
                recipeService.findAll()
        );

        log.info("Report is generated");
        emailService.sendSimpleMessage("ani@abv.bg",REPORT_TITLE, result);
    }
}
